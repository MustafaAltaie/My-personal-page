:root {
    /* FONT FAMILIES */
    --thinFont: 'Thasadith', sans-serif;
    --formalFont: "Dosis", sans-serif;

    /* Background colors */
    --darkBG: #000;
    --lightBG: #fff;

    /* Colors */
    --darkText: #ffffffaa;
    --lightText: #000000aa;
    --darkBlue: #40bfffce;
    --darkYellow: #f5d400dd;
}
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    outline: none;
    text-decoration: none;
    line-height: 1.5rem;
    word-spacing: 0.2rem;
    user-select: none;
    -webkit-user-select: none;
    resize: none;
}
.darkMode * :not([class*="fa-"]):not(form textarea, form button):not(span) {
    font-family: var(--thinFont);
    letter-spacing: 0.3px;
    color: #ffffffdd;
}
.lightMode * :not([class*="fa-"]) {
    font-family: var(--formalFont);
    color: #000000dd;
}
i {
    margin-right: 10px;
}
button {
    cursor: pointer;
}
.darkMode i {
    color: #ffffffaa;
}
.lightMode i {
    color: #000000aa;
}
.darkMode header, body.darkMode {
    background-image: linear-gradient(150deg, #000, #112845, #112845, #000);
    background-attachment: fixed;
}
.lightMode header, body.lightMode {
    background-image: radial-gradient(circle at 0 0, #0080ff28, transparent 40%),
    radial-gradient(circle at 50% 110%, #e4cb6a27, transparent 30%),
    radial-gradient(circle at 120% 50%, #1de5ff34, transparent 40%);
    background-attachment: fixed;
}
section {
    overflow-x: hidden;
}
.flexMiddle {
    display: flex;
    justify-content: center;
    align-items: center;
}
.flexColumn {
    display: flex;
    flex-direction: column;
}
.darkMode h1 {
    font-weight: normal;
}
.sectionTitle {
    margin-left: 20px;
}
.dottedElement::before {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: #888;
}

form {
    display: flex;
    flex-direction: column;
    gap: 5px;
    overflow: hidden;
    transition: 0.5s;
}
form input, form textarea, form button {
    border-radius: 10px;
    padding: 10px;
    color: black !important;
    font-family: var(--formalFont) !important;
}
form textarea {
    min-height: 80px;
}
form button {
    background-color: rgb(195, 160, 83);
    border: none;
}
form > button {
    margin-top: 5px;
}
form > button:hover {
    background-color: rgb(219, 184, 107);
}
form .formTextInput {
    position: relative;
    padding-top: 10px;
    margin-top: 5px;
}
form .formTextInput > h5 {
    z-index: 100;
    position: absolute;
    top: -11px;
    left: 10px;
    font-weight: normal;
}
form .formTextInput > input, form > .formTextInput > textarea {
    width: 100%;
}
.darkMode form input,
.darkMode form textarea {
    border: none;
}
.lightMode form input,
.lightMode form textarea {
    border: solid 0.5px #00000055;
}
.formTwoInputs {
    display: flex;
    gap: 10px;
}
.formTwoInputs,
.formTwoInputs > div,
.formTwoInputs > div > input {
    width: 100%;
}

.showFormButton {
    font-family: var(--formalFont) !important;
    width: 30px;
    height: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-bottom: 8px;
    margin: 0 auto 10px auto;
    font-size: 35px;
    cursor: pointer;
    transition: 0.2s linear 0.3s;
}
.showFormButtonOn {
    transform: rotate(45deg);
}

.flex20 {
    display: flex;
    gap: 20px;
}

.toolsWrapper {
    display: flex;
    gap: 20px;
}
.toolsWrapper > span {
    cursor: pointer;
}

@media (min-width: 1024px) {
    .darkMode * :not([class*="fa-"]):not(form textarea, form button):not(span) {
        color: var(--darkText);
    }
    .lightMode * :not([class*="fa-"]) {
        color: var(--lightText);
    }
    p {
        font-size: 14px;
    }
    h3 {
        font-size: 16px;
    }
    h5 {
        font-size: 12px;
    }
}